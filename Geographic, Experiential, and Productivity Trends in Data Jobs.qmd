---
title: "Geographic, Experiential, and Productivity Trends in Data Jobs"
Author: "Nakonde Ronah Precious"
---

# About the datasets

Here I have used two data sets from Kaggle.

The first is about jobs in the field of data science that explores **9355 entries** and this data set has 12 columns;

-   **work_year**: The year the data was recorded.

-   **job_title**: Title of the job (e.g., Data Scientist, Data Architect).

-   **job_category**: Broad job classification (e.g., Data Engineering, Data Science).

-   **salary_currency**: Currency of the salary.

-   **salary**: Salary in the specified currency.

-   **salary_in_usd**: Standardized salary in USD.

-   **employee_residence**: Country of residence of the employee.

-   **experience_level**: Experience level (e.g., Entry-level, Mid-level, Senior).

-   **employment_type**: Type of employment (e.g., Full-time, Contract).

-   **work_setting**: Work environment (e.g., Hybrid, In-person, Remote).

-   **company_location**: Location of the company.

-   **company_size**: Size of the company (e.g., Small (S), Medium (M), Large (L)).

    The second data set contains **1,000 entries** and 5 columns, focusing on employee work patterns and productivity;

-   **Employee_ID**: A unique identifier for each employee.

-   **Employment_Type**: Indicates if the employee works "Remote" or "In-Office."

-   **Hours_Worked_Per_Week**: Average number of hours worked per week.

-   **Productivity_Score**: A metric indicating productivity (e.g., performance or output).

-   **Well_Being_Score**: A score reflecting employee well-being.

    My motivation for exploring data sets on job trends in data arises from the recent wave of layoffs in the tech industry during 2023-2024. This situation has sparked a debate among major tech CEOs, who argue that remote work diminishes productivity and that the same level of
    output can be achieved when employees are in the office. I aim to investigate whether this claim holds true by analyzing job trends in data science.

    Additionally, I plan to explore how different countries are responding to these trends, particularly in
    terms of the number of remote job opportunities they offer. By comparing these insights across the two data sets, I hope to uncover valuable information about the evolving landscape of work in the tech sector and the implications for remote employment.

## Loading the data

```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
library(tidyverse)
library(ggplot2)
library(scales)
library(forcats)
library(svglite)

jobs_data <- read_csv("/Users/ronahnakonde/Downloads/jobs_in_data.csv") 
productivity_data <- read_csv("/Users/ronahnakonde/Downloads/remote_work_productivity.csv") 
```

## Bigger picture

```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Summarize the data if needed (e.g., count occurrences)
library(gtExtras)
jobs_summary <- jobs_data |> 
  count(job_category, work_setting, name = "count")
```

```{r}
jobs_summary1 <- jobs_summary |> 
  group_by(job_category) |> 
  mutate(total_count = sum(count)) |> 
  ungroup() |> 
  mutate(job_category = fct_reorder(job_category, total_count, .desc = TRUE))
  
  job_category_summary <- jobs_summary1 |> 
    group_by(job_category) |> 
    summarise(total_count = sum(count), .groups = "drop")
  
# Create the gt table 
jobs_summary_table <- job_category_summary |> 
  gt() |> 
  gt_plt_bar(column = total_count, width = 70)

jobs_summary_table
```

```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
ggplot(jobs_summary1, aes(y = job_category, fill = work_setting)) +
  geom_bar(position = "fill") +  # Use "fill" to show proportions
  scale_x_continuous(labels = scales::percent) +  # Convert y-axis to percentage
  labs(title = "Distribution of Work Settings Amongst Job Categories",
       x = NULL, y = NULL,
       fill = "Work Setting") +
 theme_classic()
  
```


```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Print column names
rm(jobs_summary_wide)

```


```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
location_summary <- jobs_data |> 

  group_by(company_location) |> 

  summarise(count = n(), .groups = 'drop') |> 

  arrange(desc(count))
```

```{r}
# Get the top 10 countries by job count
top_countries <- jobs_data |> 
  group_by(company_location) |> 
  summarise(count = n(), .groups = 'drop') |> 
  arrange(desc(count)) |> 
  slice(1:10) |> 
  pull(company_location)

# Filter the original data for these top countries
filtered_data <- jobs_data |> 
  filter(company_location %in% top_countries)
```

```{r}
# Load required libraries
library(dplyr)
library(ggplot2)
library(scales)

# Calculate the proportions of each work setting for each company location
proportions_data <- filtered_data |> 
  group_by(company_location, work_setting) |> 
  summarise(count = n(), .groups = 'drop') |> 
  group_by(company_location) |> 
  mutate(proportion = count / sum(count))  # Calculate proportion

# Create the stacked column graph with inverted y-axis
ggplot(proportions_data, aes(x = company_location, y = proportion, fill = work_setting)) +
  geom_col(position = "fill") +  # Use "fill" to show proportions
  scale_y_continuous(labels = scales::percent) +  # Convert y-axis to percentage
  scale_y_reverse() +  # Invert the y-axis
  labs(title = "Distribution of Work Settings in Top 10 Countries",
       x = "Company Location",
       y = "Proportion of Job Postings",
       fill = "Work Setting") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
```{r}
# Create the box plot with viridis color palette
library(viridis)
ggplot(jobs_data, aes(x = reorder(experience_level, -as.numeric(salary_in_usd)), y = as.numeric(salary_in_usd), fill = work_setting)) +
  geom_boxplot() +
  scale_fill_viridis(discrete = TRUE) +
  labs(title = "Salary Distribution by Experience level and Work Setting",
       x = "Experience Level",
       y = "Salary (USD)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

